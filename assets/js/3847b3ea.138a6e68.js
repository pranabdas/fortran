"use strict";(self.webpackChunkfortran_programing=self.webpackChunkfortran_programing||[]).push([[581],{388:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var i=r(5893),o=r(1151);const s={title:"Setting up Fortran",sidebar_label:"Setup",slug:"/",keywords:["fortran programming","scientific programming","numerical programming","numerical integration"]},a=void 0,t={id:"setup",title:"Setting up Fortran",description:"FORTRAN is optimized for high performance scientific computing. I will be",source:"@site/docs/setup.md",sourceDirName:".",slug:"/",permalink:"/fortran/",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/fortran/blob/main/docs/setup.md",tags:[],version:"current",frontMatter:{title:"Setting up Fortran",sidebar_label:"Setup",slug:"/",keywords:["fortran programming","scientific programming","numerical programming","numerical integration"]},sidebar:"docs",next:{title:"Basics",permalink:"/fortran/basics"}},c={},l=[];function d(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["FORTRAN is optimized for high performance scientific computing. I will be\nworking on UNIX/ Linux machine for running codes. If you are on Windows, you may\nconsider using ",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/windows/wsl/",children:"WSL"}),". We will be\nusing ",(0,i.jsx)(n.a,{href:"https://gcc.gnu.org/fortran/",children:"gfortran"})," compiler."]}),"\n",(0,i.jsx)(n.p,{children:"To install gcc and gfortran in Ubuntu/ Debian:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt install gcc gfortran\n"})}),"\n",(0,i.jsx)(n.p,{children:"On macOS you can install via Homebrew:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"brew install gcc\n"})}),"\n",(0,i.jsxs)(n.p,{children:["gfortran is part of gcc. You can use any text editor of your choice to write\nsource codes. We will be using ",(0,i.jsx)(n.code,{children:".f90"})," file extension for our source code files.\nThe program can be compiled using:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gfortran source.f90\n"})}),"\n",(0,i.jsxs)(n.p,{children:["It will create a binary file named ",(0,i.jsx)(n.code,{children:"a.out"})," in the same directory as the source\ncode, which can be executed by:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./a.out\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you would like to specify a name for the executable instead of default\n",(0,i.jsx)(n.code,{children:"a.out"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gfortran source.f90 -o XYapp\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you have dependent modules in separate source files, you need to compile the\nmodules first followed by main program with linking module ",(0,i.jsx)(n.code,{children:".o"})," file. More on\nthis on the ",(0,i.jsx)(n.a,{href:"/fortran/modules",children:"modules"})," section."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gfortran -c module.f90\ngfortran main.f90 module.o\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);