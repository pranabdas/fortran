"use strict";(self.webpackChunkfortran_programing=self.webpackChunkfortran_programing||[]).push([[888],{4544:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=i(5893),r=i(1151),a=i(9286);const o="! Program : Write output to a file\n\nPROGRAM file_write\n  IMPLICIT NONE\n\n  INTEGER :: ii\n\n  OPEN(unit=1, file='output.dat', status='new')\n    DO ii = 1, 10\n      WRITE(1, '(i4)') ii*ii\n    ENDDO\n  CLOSE(unit=1)\nEND PROGRAM file_write\n",l="! Program : Read data from file\n\nPROGRAM file_read\n  IMPLICIT NONE\n\n  INTEGER :: ii, data(10)\n\n  OPEN(unit=1, file='output.dat', status='old')\n    DO ii = 1, 10\n      READ(1, '(i4)') data(ii)\n    END DO\n  CLOSE(unit=1)\n\n  DO ii = 1, 10\n    PRINT '(i3)', data(ii)\n  END DO\nEND PROGRAM file_read\n",s={title:"File Input / Output",sidebar_label:"File I/O"},d=void 0,u={id:"file",title:"File Input / Output",description:"Here we will generate some data and write it to a file:",source:"@site/docs/file.mdx",sourceDirName:".",slug:"/file",permalink:"/fortran/file",draft:!1,unlisted:!1,editUrl:"https://github.com/pranabdas/fortran/blob/main/docs/file.mdx",tags:[],version:"current",frontMatter:{title:"File Input / Output",sidebar_label:"File I/O"},sidebar:"docs",previous:{title:"Pointer",permalink:"/fortran/pointer"},next:{title:"Coding practice",permalink:"/fortran/category/coding-practice"}},f={},c=[];function p(e){const t={admonition:"admonition",code:"code",p:"p",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Here we will generate some data and write it to a file:"}),"\n","\n",(0,n.jsx)(a.Z,{language:"fortran",title:"src/08_file_write.f90",showLineNumbers:!0,children:o}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["Note that ",(0,n.jsx)(t.code,{children:"unit=0, 5, and 6"})," are reserved. Do not use them to identify files in\nyour programs."]})}),"\n",(0,n.jsx)(t.p,{children:"Reading from file: we will read the data from file that is generated in the\nabove example."}),"\n","\n","\n",(0,n.jsx)(a.Z,{language:"fortran",title:"src/09_file_read.f90",showLineNumbers:!0,children:l})]})}function m(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);