"use strict";(self.webpackChunkfortran_programing=self.webpackChunkfortran_programing||[]).push([["165"],{4898:function(e,n,t){t.r(n),t.d(n,{default:()=>x,frontMatter:()=>s,metadata:()=>a,assets:()=>i,toc:()=>d,contentTitle:()=>m});var a=JSON.parse('{"id":"exec-command","title":"Execute system/external command","description":"We can call executecommandline to execute external commands in a FORTRAN","source":"@site/docs/exec-command.mdx","sourceDirName":".","slug":"/exec-command","permalink":"/fortran/exec-command","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/fortran/blob/main/docs/exec-command.mdx","tags":[],"version":"current","frontMatter":{"title":"Execute system/external command","sidebar_label":"External command"},"sidebar":"docs","previous":{"title":"Argument parsing","permalink":"/fortran/arg-parsing"},"next":{"title":"BLAS","permalink":"/fortran/blas"}}'),c=t("5893"),r=t("65"),o=t("1705");let s={title:"Execute system/external command",sidebar_label:"External command"},m=void 0,i={},d=[];function l(e){let n={code:"code",p:"p",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:["We can call ",(0,c.jsx)(n.code,{children:"execute_command_line"})," to execute external commands in a FORTRAN\nprogram:"]}),"\n","\n",(0,c.jsx)(o.Z,{language:"fortran",title:"src/27_exec_command.f90",showLineNumbers:!0,children:'PROGRAM MAIN\n    IMPLICIT NONE\n\n    INTEGER exit_code\n\n    ! Execute system command\n    PRINT *, "Executing: ls"\n    CALL execute_command_line("ls")\n\n    PRINT *, "Executing: du -hs ."\n    CALL execute_command_line("du -hs .", exitstat=exit_code)\n\n    PRINT *, "Exit code: ", exit_code\n\nEND\n'})]})}function x(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);