"use strict";(self.webpackChunkfortran_programing=self.webpackChunkfortran_programing||[]).push([["109"],{2774:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,toc:()=>m,default:()=>x,metadata:()=>c,assets:()=>d,contentTitle:()=>s});var c=JSON.parse('{"id":"coding-practice/exec-command","title":"Execute system/external command","description":"We can call executecommandline to execute external commands in a FORTRAN","source":"@site/docs/coding-practice/11-exec-command.mdx","sourceDirName":"coding-practice","slug":"/coding-practice/exec-command","permalink":"/fortran/coding-practice/exec-command","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/fortran/blob/main/docs/coding-practice/11-exec-command.mdx","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"title":"Execute system/external command","sidebar_label":"External command"},"sidebar":"docs","previous":{"title":"Argument parsing","permalink":"/fortran/coding-practice/arg-parsing"},"next":{"title":"BLAS","permalink":"/fortran/coding-practice/blas"}}'),a=t(4848),r=t(4429),i=t(464);let o={title:"Execute system/external command",sidebar_label:"External command"},s,d={},m=[];function l(e){let n={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["We can call ",(0,a.jsx)(n.code,{children:"execute_command_line"})," to execute external commands in a FORTRAN\nprogram:"]}),"\n","\n",(0,a.jsx)(i.A,{language:"fortran",title:"src/27_exec_command.f90",showLineNumbers:!0,children:'PROGRAM MAIN\n    IMPLICIT NONE\n\n    INTEGER exit_code\n\n    ! Execute system command\n    PRINT *, "Executing: ls"\n    CALL execute_command_line("ls")\n\n    PRINT *, "Executing: du -hs ."\n    CALL execute_command_line("du -hs .", exitstat=exit_code)\n\n    PRINT *, "Exit code: ", exit_code\n\nEND\n'})]})}function x(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);