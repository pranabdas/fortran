"use strict";(self.webpackChunkfortran_programing=self.webpackChunkfortran_programing||[]).push([[461],{250:(t,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>h,default:()=>b,frontMatter:()=>o,metadata:()=>e,toc:()=>l});const e=JSON.parse('{"id":"abs-path","title":"Function: Get absolute path","description":"Here is a function to convert filenames to their absolute path:","source":"@site/docs/abs-path.mdx","sourceDirName":".","slug":"/abs-path","permalink":"/fortran/abs-path","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/fortran/blob/main/docs/abs-path.mdx","tags":[],"version":"current","frontMatter":{"title":"Function: Get absolute path","sidebar_label":"Absolute path"},"sidebar":"docs","previous":{"title":"Swap two numbers","permalink":"/fortran/swap"},"next":{"title":"Calculate hypotenuse","permalink":"/fortran/hypotenuse"}}');var s=a(4848),p=a(8453),r=a(1432);const i="PROGRAM print_abs_path\n  IMPLICIT NONE\n\n  CHARACTER(LEN=128) :: input_path, abs_path, get_abs_path\n\n  PRINT \"(a,$)\", 'Enter file name: '\n  READ (*,\"(a128)\") input_path\n\n  abs_path = get_abs_path(input_path)\n  PRINT *, 'Absolute PATH: ', abs_path\nEND PROGRAM print_abs_path\n\nCHARACTER(LEN=128) FUNCTION get_abs_path(input_path)\n  IMPLICIT NONE\n\n  CHARACTER(LEN=128), INTENT(IN) :: input_path\n  CHARACTER(LEN=128) :: PREFIX\n\n  IF (input_path(1:1) == '/' ) THEN\n    get_abs_path = input_path\n\n  ELSE IF (input_path(1:2) == '~/' ) THEN\n    CALL GETENV('HOME', PREFIX)\n    get_abs_path = PREFIX(:LNBLNK(PREFIX)) // input_path(2:LNBLNK(input_path))\n\n  ELSE\n    CALL GETCWD(PREFIX)\n    get_abs_path = PREFIX(:LNBLNK(PREFIX)) // '/' // input_path(:LNBLNK(input_path))\n  ENDIF\n\n  RETURN\nEND FUNCTION get_abs_path\n",o={title:"Function: Get absolute path",sidebar_label:"Absolute path"},h=void 0,u={},l=[];function _(t){const n={p:"p",...(0,p.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Here is a function to convert filenames to their absolute path:"}),"\n","\n",(0,s.jsx)(r.A,{language:"fortran",title:"src/15_get_abs_path.f90",showLineNumbers:!0,children:i})]})}function b(t={}){const{wrapper:n}={...(0,p.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(_,{...t})}):_(t)}}}]);